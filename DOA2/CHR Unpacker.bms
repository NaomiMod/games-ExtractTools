#----------------------------------------------------------------------
# Dead or Alive 2 (Dreamcast) .CHR Unpacker 
#
# *Script by VincentNL  06/10/2021
#
#
#----------------------------------------------------------------------

# TEXTURES_LOOP

set MEMORY_FILE2 binary ""
set MEMORY_FILE3 binary ""
set MEMORY_FILE4 binary "\x47\x42\x49\x58\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x50\x56\x52\x54"    # GBIX+PVR header
set MEMORY_FILE5 binary ""


get name basename
String pvr_container P "%name%.bin"    # 
open fdsE "pvr_container" 1            # Open bin file to get pvr texture data
get binsize asize 1

goto 0x10
get total_tex long   #total textures
goto 0x8
get header_offset long  #where size, pixel data and lenght are stored



xmath base_address "header_offset+0x8"
goto base_address
get base_address long

goto header_offset

Math A = 1



for loop


	 #print  "--------TEXTURE %A%:"
     savepos currentpos
     get tex_size long
     
     #print "tex size: %tex_size|x%"
     

     log MEMORY_FILE2 currentpos 0x4
     math currentpos += 0x4

     
     get pixel_type long
     #print "pixel_type: %pixel_type|x%"
     

     log MEMORY_FILE3 currentpos 0x4
     math currentpos += 0x4

     
     
     get PVR_start long
     Math PVR_start -= base_address
     #print "PVR_start: %PVR_start|x%"
       
	    if A < total_tex
	   
	   
           xmath nextpos "currentpos +0xc"
           #print "next PVR start: %nextpos|x%"
           
           goto nextpos
           get PVR_end long
           
           Math PVR_end -= base_address
           #print "PVR_end: %PVR_end|x%"
           
           Xmath PVR_size "PVR_end-PVR_start"
           #print "PVR_size: %PVR_size|x%"
		   
		   #print  "-----------------"
           math nextpos -= 0x8
           goto nextpos
           math currentpos = nextpos
		   

	    else
		   
		   Xmath PVR_size "binsize-PVR_start"
		   #print "PVR_size: %PVR_size|x%"

		   break

		endif
           
     
	 
	 xMath PVR_size_val "PVR_size+0x8"
	 PutVarChr MEMORY_FILE5 0 PVR_size_val Long
	 
	 append
	 log MEMORY_FILE 0 20 -4
	 log MEMORY_FILE 0 4 -5
	 log MEMORY_FILE 0 4 -3
	 log MEMORY_FILE 0 4 -2
	 log MEMORY_FILE PVR_start PVR_size 1
	 append
	 
	 get tsize asize -1
	 String PVR_NAME P "%name%_tex_%A%.pvr"
	 log PVR_NAME 0 tsize -1
     
     Math A += 1
	 
	 log MEMORY_FILE 0 0
	 log MEMORY_FILE2 0 0
	 log MEMORY_FILE3 0 0
	 log MEMORY_FILE5 0 0
	 

next loop


# MODELS_LOOP


Math B = 1
get name basename

goto 0xc
get total_models long   #total models
goto 0x4
get models_pointers long
goto models_pointers

get base_address long

math model_offset = models_pointers


 for loop2

      String modelname P "%name%_model_%B%.bin"
      goto model_offset
      get model_start long
      xMath model_start "(model_start-base_address)+0x18"
      
        if B < total_models
	    
          get next_offset long
          Xmath model_end "(next_offset-base_address)+0x18"
		  Xmath model_size "model_end-model_start"
		  log modelname model_start model_size
          

		else
		  
		  xmath model_end "models_pointers-0x8"
		  Xmath model_size "model_end-model_start"
		  log modelname model_start model_size
		  
		  break

		  
        endif
		
		
	  Math B += 1
	  Math model_offset += 0x4
	  
 next loop2
